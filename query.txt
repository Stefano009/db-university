1. Selezionare tutti gli studenti nati nel 1990 (160)

SELECT *
FROM `students`
WHERE YEAR(`date_of_birth`) = 1990;

2. Selezionare tutti i corsi che valgono più di 10 crediti (479)

SELECT * 
FROM `courses`
WHERE `cfu` > 10;

3. Selezionare tutti gli studenti che hanno più di 30 anni

SELECT *
FROM `students`
WHERE `date_of_birth` < '1990-10-18';
/*******************************************************************/
scritta così è piu' efficiente. mi prendo la data odierna e faccio la differenza

SELECT *
FROM `students`
WHERE TIMESTAMPDIFF(YEAR,`date_of_birth`,CURRENTDATE()) > 30

4. Selezionare tutti i corsi del primo semestre del primo anno di un qualsiasi corso di
laurea (286)

SELECT * 
FROM `courses`
WHERE `year` = 1
AND `period` = 'I semestre';

5. Selezionare tutti gli appelli d'esame che avvengono nel pomeriggio (dopo le 14) del
20/06/2020 (21)

SELECT * 
FROM `exams`
WHERE `date` = '2020-06-20'
AND HOUR(`hour`) >= 14;

6. Selezionare tutti i corsi di laurea magistrale (38)

SELECT * 
FROM `degrees`
WHERE `level` = 'magistrale';

7. Da quanti dipartimenti è composta l'università? (12)

SELECT COUNT(`id`) 
FROM `departments`;

8. Quanti sono gli insegnanti che non hanno un numero di telefono? (50)

SELECT COUNT(*) 
FROM `teachers`
WHERE `phone` IS NULL;

/*********************************************************/
                        GROUP BY

1. Contare quanti iscritti ci sono stati ogni anno

SELECT COUNT(`id`) AS `numero_studenti`,YEAR(`enrolment_date`) AS `anno_iscrizione`
FROM `students`
GROUP BY `anno_iscrizione`

2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio

SELECT COUNT(`id`) AS `teachers_number`, `office_address` AS `building_group` 
FROM `teachers`
GROUP BY `building_group`

3. Calcolare la media dei voti di ogni appello d'esame

SELECT AVG(`vote`), `exam_id` AS `exam_session`
FROM `exam_student`
GROUP BY `exam_session`

4. Contare quanti corsi di laurea ci sono per ogni dipartimento

SELECT COUNT(`degrees`.`id`) AS `degrees_number`, `departments`.`name` AS `department_name`
FROM `departments`
INNER JOIN `degrees` ON `departments`.`id`= `degrees`.`department_id`
GROUP BY `departments`.`id`

/******************************************************************?

                        JOIN

1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT `students`.`name`, `students`.`surname`, `degrees`.`name`
FROM `students`
INNER JOIN `degrees` on `students`.`degree_id` = `degrees`.`id`
WHERE `degrees`.`name` = "Corso di Laurea in Economia"

2. Selezionare tutti i Corsi di Laurea del Dipartimento di Neuroscienze

SELECT `degrees`.`name` AS `degrees_name` , `departments`.`name` AS `department_name`
FROM `degrees`
INNER JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
WHERE `departments`.`name` = "Dipartimento di Neuroscienze"

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT `teachers`.`name`, `teachers`.`surname`, `courses`.`name` AS `course_name`
FROM `teachers`
INNER JOIN `course_teacher` ON `teachers`.`id` = `course_teacher`.`teacher_id`
INNER JOIN `courses` ON `course_teacher`.`course_id` = `courses`.`id`
(WHERE `teachers`.`name` = "Fulvio" AND `teachers`.`surname` = "Amato") 
// scritto così per allenarmi sull'AND //
WHERE `teachers`.`id` = 44

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il
relativo dipartimento, in ordine alfabetico per cognome e nome

SELECT `students`.`name`, `students`.`surname`, `students`.`fiscal_code`, `degrees`.`name`, `departments`.`name` 
FROM `students`
INNER JOIN `degrees` ON `students`.`degree_id` = `degrees`.`id` 
INNER JOIN `departments` ON `degrees`.`department_id` = `departments`.`id` 
ORDER BY `students`.`surname` , `students`.`name`

//non era specificato quanti dati del corso di laurea inserire, inizialmente avevo inserito tutto con `degrees`.* ma per pulizia ho preferito associare ad ogni studente il nome del degree e del dipartimento di appartenenza

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

SELECT `degrees`.`name` AS `degree_name`, `courses`.`name` AS `course_name` , `teachers`.`surname`, `teachers`.`name`
FROM `degrees` 
INNER JOIN `courses` ON `degrees`.`id` = `courses`.`degree_id`
INNER JOIN `course_teacher` ON `courses`.`id` = `course_teacher`.`course_id`
INNER JOIN `teachers` ON `course_teacher`.`teacher_id` = `teachers`.`id`

6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)

SELECT `teachers`.`name`, `teachers`.`surname`, `departments`.`name` AS `department_name`
FROM `teachers`
INNER JOIN `course_teacher` ON `teachers`.`id` = `course_teacher`.`teacher_id`
INNER JOIN `courses` ON `course_teacher`.`course_id` = `courses`.`id`
INNER JOIN `degrees` ON `courses`.`degree_id` = `degrees`.`id`
INNER JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
WHERE `departments`.`name` = "Dipartimento di Matematica"
GROUP BY `teachers`.`id`

7. BONUS: Selezionare per ogni studente quanti tentativi d’esame ha sostenuto per
superare ciascuno dei suoi esam

SELECT `exam_student`.`student_id`, `exams`.`course_id` , COUNT(`exam_student`.`student_id`) AS `tentativi` 
FROM `exam_student` 
INNER JOIN `exams` ON `exam_student`.`exam_id` = `exams`.`id` 
GROUP BY `exam_student`.`student_id`, `exams`.`course_id` 
ORDER BY `tentativi` DESC

// stesso esercizio di prima ma con id sostituiti da nomi reali per rendere i dati piu' leggibili all'utente

SELECT `students`.`name` AS `student_name`, `students`.`surname` AS `student_surname` , `courses`.`name` AS `course_name` , COUNT(`exam_student`.`student_id`) AS `exam_attempts` 
FROM `exam_student` 
INNER JOIN `students` ON `exam_student`.`student_id` = `students`.`id` 
INNER JOIN `exams` ON `exam_student`.`exam_id` = `exams`.`id` 
INNER JOIN `courses` ON `exams`.`course_id` = `courses`.`id` 
GROUP BY `exam_student`.`student_id`, `exams`.`course_id` 
ORDER BY `exam_attempts` DESC



